import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import emailjs from '@emailjs/browser';
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";

interface ContactFormData {
  name: string;
  phone: string;
  email: string;
  message: string;
}

interface ContactFormProps {
  title?: string;
  description?: string;
}

// EmailJS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - –¢–†–ï–ë–£–ï–¢–°–Ø –ù–ê–°–¢–†–û–ô–ö–ê!
// –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EmailJS:
// 1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://www.emailjs.com/
// 2. –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å –∏ —à–∞–±–ª–æ–Ω
// 3. –ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∏–∂–µ –Ω–∞ –≤–∞—à–∏
const EMAILJS_SERVICE_ID = 'YOUR_SERVICE_ID'; // –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞ emailjs.com
const EMAILJS_TEMPLATE_ID = 'YOUR_TEMPLATE_ID'; // –°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω –Ω–∞ emailjs.com  
const EMAILJS_PUBLIC_KEY = 'YOUR_PUBLIC_KEY'; // –í–∞—à –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ EmailJS
const isEmailJSConfigured = EMAILJS_SERVICE_ID !== 'YOUR_SERVICE_ID' && 
                           EMAILJS_TEMPLATE_ID !== 'YOUR_TEMPLATE_ID' && 
                           EMAILJS_PUBLIC_KEY !== 'YOUR_PUBLIC_KEY';

const ContactForm = ({ title = "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", description }: ContactFormProps) => {
  const [formData, setFormData] = useState<ContactFormData>({
    name: '',
    phone: '',
    email: '',
    message: ''
  });
  const [isLoading, setIsLoading] = useState(false);
  const [showDialog, setShowDialog] = useState(false);
  const [dialogContent, setDialogContent] = useState({ 
    title: '', 
    description: '',
    type: 'success' as 'success' | 'error'
  });

  const formatMessage = () => {
    const date = new Date().toLocaleString('ru-RU');
    return `
üîî –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê

üìÖ –î–∞—Ç–∞: ${date}
üë§ –ò–º—è: ${formData.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üìß Email: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

#–∑–∞—è–≤–∫–∞ #—ç–Ω–µ—Ä–≥–æ–∞–ª—å—è–Ω—Å–∫—Ä—ã–º`;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.name || !formData.phone) {
      setDialogContent({
        title: '–û—à–∏–±–∫–∞',
        description: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è –∏ –¢–µ–ª–µ—Ñ–æ–Ω',
        type: 'error'
      });
      setShowDialog(true);
      return;
    }

    setIsLoading(true);

    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EmailJS
      if (!isEmailJSConfigured) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ EmailJS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        console.warn('EmailJS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ EmailJS –≤ —Ñ–∞–π–ª–µ ContactForm.tsx');
        setDialogContent({
          title: '–í–Ω–∏–º–∞–Ω–∏–µ',
          description: '–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (978) 777-77-77',
          type: 'error'
        });
        setShowDialog(true);
        setIsLoading(false);
        return;
      }
      
      // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ EmailJS
      if (isEmailJSConfigured) {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS
        emailjs.init(EMAILJS_PUBLIC_KEY);
        
        const emailResult = await emailjs.send(
          EMAILJS_SERVICE_ID,
          EMAILJS_TEMPLATE_ID,
          {
            to_email: 'crimea-alliance@list.ru',
            from_name: formData.name,
            from_email: formData.email || '–Ω–µ —É–∫–∞–∑–∞–Ω',
            phone: formData.phone,
            message: formData.message || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ',
            date: new Date().toLocaleString('ru-RU'),
            formatted_message: formatMessage()
          }
        );

        if (emailResult.status === 200) {
          setDialogContent({
            title: '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!',
            description: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!',
            type: 'success'
          });
          // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
          setFormData({ name: '', phone: '', email: '', message: '' });
        }
      } else {
        // –ï—Å–ª–∏ EmailJS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        setDialogContent({
          title: '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
          description: `–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:
          
1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ emailjs.com
2. –°–æ–∑–¥–∞—Ç—å email —Å–µ—Ä–≤–∏—Å –∏ —à–∞–±–ª–æ–Ω
3. –ó–∞–º–µ–Ω–∏—Ç—å –≤ –∫–æ–¥–µ ContactForm.tsx:
   - EMAILJS_SERVICE_ID
   - EMAILJS_TEMPLATE_ID
   - EMAILJS_PUBLIC_KEY

–ê –ø–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:
üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 978 910-77-10
üìß Email: crimea-alliance@list.ru`,
          type: 'error'
        });
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
      setDialogContent({
        title: '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏',
        description: `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
        
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é:
üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 978 910-77-10
üìß Email: crimea-alliance@list.ru`,
        type: 'error'
      });
    } finally {
      setIsLoading(false);
      setShowDialog(true);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  return (
    <>
      <Card className="w-full max-w-md mx-auto">
        <CardHeader>
          <CardTitle className="text-2xl text-center">{title}</CardTitle>
          {description && (
            <p className="text-sm text-gray-600 text-center mt-2">{description}</p>
          )}
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <Input 
                name="name"
                placeholder="–í–∞—à–µ –∏–º—è *" 
                value={formData.name}
                onChange={handleInputChange}
                required
                disabled={isLoading}
              />
            </div>
            <div>
              <Input 
                name="phone"
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω *" 
                type="tel" 
                value={formData.phone}
                onChange={handleInputChange}
                required
                disabled={isLoading}
              />
            </div>
            <div>
              <Input 
                name="email"
                placeholder="Email" 
                type="email" 
                value={formData.email}
                onChange={handleInputChange}
                disabled={isLoading}
              />
            </div>
            <div>
              <Textarea 
                name="message"
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç" 
                rows={4}
                value={formData.message}
                onChange={handleInputChange}
                disabled={isLoading}
              />
            </div>
            <Button 
              type="submit" 
              className="w-full" 
              size="lg"
              disabled={isLoading}
            >
              {isLoading ? (
                <>
                  <Icon name="Loader2" className="mr-2 h-5 w-5 animate-spin" />
                  –û—Ç–ø—Ä–∞–≤–∫–∞...
                </>
              ) : (
                <>
                  <Icon name="Send" className="mr-2 h-5 w-5" />
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </>
              )}
            </Button>
            <p className="text-xs text-gray-500 text-center">
              –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            </p>
          </form>
        </CardContent>
      </Card>

      <AlertDialog open={showDialog} onOpenChange={setShowDialog}>
        <AlertDialogContent className={dialogContent.type === 'error' ? 'max-w-lg' : 'max-w-md'}>
          <AlertDialogHeader>
            <AlertDialogTitle>{dialogContent.title}</AlertDialogTitle>
            <AlertDialogDescription className="whitespace-pre-line">
              {dialogContent.description}
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter>
            <AlertDialogAction>–ü–æ–Ω—è—Ç–Ω–æ</AlertDialogAction>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </>
  );
};

export default ContactForm;