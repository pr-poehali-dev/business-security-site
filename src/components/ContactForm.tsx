import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";

interface ContactFormData {
  name: string;
  phone: string;
  email: string;
  message: string;
}

interface ContactFormProps {
  title?: string;
  description?: string;
}

const ContactForm = ({ title = "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", description }: ContactFormProps) => {
  const [formData, setFormData] = useState<ContactFormData>({
    name: '',
    phone: '',
    email: '',
    message: ''
  });
  const [showDialog, setShowDialog] = useState(false);
  const [dialogContent, setDialogContent] = useState({ title: '', description: '' });

  // Telegram username –∏–ª–∏ ID —á–∞—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
  const TELEGRAM_USERNAME = 'energoalliance_krym'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à username –±–µ–∑ @
  
  // VK ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
  const VK_USER_ID = '123456789'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à VK ID

  const formatMessage = () => {
    const date = new Date().toLocaleString('ru-RU');
    return `üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞*

üìÖ –î–∞—Ç–∞: ${date}
üë§ –ò–º—è: ${formData.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üìß Email: ${formData.email}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message}

#–∑–∞—è–≤–∫–∞ #—ç–Ω–µ—Ä–≥–æ–∞–ª—å—è–Ω—Å–∫—Ä—ã–º`;
  };

  const sendToTelegram = () => {
    const message = encodeURIComponent(formatMessage());
    const telegramUrl = `https://t.me/${TELEGRAM_USERNAME}?text=${message}`;
    window.open(telegramUrl, '_blank');
  };

  const sendToVK = () => {
    const message = encodeURIComponent(formatMessage());
    const vkUrl = `https://vk.me/id${VK_USER_ID}?text=${message}`;
    window.open(vkUrl, '_blank');
  };

  const sendToWhatsApp = () => {
    // –ù–æ–º–µ—Ä WhatsApp –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –±–µ–∑ +
    const whatsappNumber = '79787133959'; // –í–∞—à –Ω–æ–º–µ—Ä
    const message = encodeURIComponent(formatMessage());
    const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${message}`;
    window.open(whatsappUrl, '_blank');
  };

  const sendToEmail = () => {
    const subject = encodeURIComponent('–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –≠–Ω–µ—Ä–≥–æ–ê–ª—å—è–Ω—Å-–ö—Ä—ã–º');
    const body = encodeURIComponent(formatMessage().replace(/\*/g, ''));
    const mailtoUrl = `mailto:info@energoalliance-crimea.ru?subject=${subject}&body=${body}`;
    window.location.href = mailtoUrl;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.name || !formData.phone) {
      setDialogContent({
        title: '–û—à–∏–±–∫–∞',
        description: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è –∏ –¢–µ–ª–µ—Ñ–æ–Ω'
      });
      setShowDialog(true);
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –æ–ø—Ü–∏—è–º–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    setDialogContent({
      title: '–ó–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!',
      description: '–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏:'
    });
    setShowDialog(true);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  return (
    <>
      <Card className="w-full max-w-md mx-auto">
        <CardHeader>
          <CardTitle className="text-2xl text-center">{title}</CardTitle>
          {description && (
            <p className="text-sm text-gray-600 text-center mt-2">{description}</p>
          )}
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <Input 
                name="name"
                placeholder="–í–∞—à–µ –∏–º—è *" 
                value={formData.name}
                onChange={handleInputChange}
                required
              />
            </div>
            <div>
              <Input 
                name="phone"
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω *" 
                type="tel" 
                value={formData.phone}
                onChange={handleInputChange}
                required
              />
            </div>
            <div>
              <Input 
                name="email"
                placeholder="Email" 
                type="email" 
                value={formData.email}
                onChange={handleInputChange}
              />
            </div>
            <div>
              <Textarea 
                name="message"
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç" 
                rows={4}
                value={formData.message}
                onChange={handleInputChange}
              />
            </div>
            <Button type="submit" className="w-full" size="lg">
              <Icon name="Send" className="mr-2 h-5 w-5" />
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
            </Button>
            <p className="text-xs text-gray-500 text-center">
              –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            </p>
          </form>
        </CardContent>
      </Card>

      <AlertDialog open={showDialog} onOpenChange={setShowDialog}>
        <AlertDialogContent className="max-w-md">
          <AlertDialogHeader>
            <AlertDialogTitle>{dialogContent.title}</AlertDialogTitle>
            <AlertDialogDescription className="space-y-4">
              <span>{dialogContent.description}</span>
              
              {dialogContent.title === '–ó–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!' && (
                <div className="grid grid-cols-2 gap-3 mt-4">
                  <Button 
                    onClick={sendToTelegram}
                    className="bg-[#0088cc] hover:bg-[#0077b5] flex items-center justify-center gap-2"
                  >
                    <Icon name="Send" className="h-4 w-4" />
                    Telegram
                  </Button>
                  
                  <Button 
                    onClick={sendToVK}
                    className="bg-[#4376A6] hover:bg-[#3a6694] flex items-center justify-center gap-2"
                  >
                    <Icon name="MessageCircle" className="h-4 w-4" />
                    –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                  </Button>
                  
                  <Button 
                    onClick={sendToWhatsApp}
                    className="bg-[#25D366] hover:bg-[#20BA59] flex items-center justify-center gap-2"
                  >
                    <Icon name="Phone" className="h-4 w-4" />
                    WhatsApp
                  </Button>
                  
                  <Button 
                    onClick={sendToEmail}
                    variant="outline"
                    className="flex items-center justify-center gap-2"
                  >
                    <Icon name="Mail" className="h-4 w-4" />
                    Email
                  </Button>
                </div>
              )}
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter>
            <AlertDialogAction onClick={() => {
              if (dialogContent.title === '–ó–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!') {
                // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                setFormData({ name: '', phone: '', email: '', message: '' });
              }
            }}>
              –ó–∞–∫—Ä—ã—Ç—å
            </AlertDialogAction>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </>
  );
};

export default ContactForm;